{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Songs.js\";\nimport React from 'react';\nimport Song from './Song';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songs = ({\n  match,\n  songs,\n  deletePlaylist\n}) => {\n  const renderList = () => {\n    const playlistSongs = this.props.songs.filter(song => {\n      return song.playlistIds.find(id => id === parseInt(this.props.match.params.playlistId, 10));\n    });\n    return playlistSongs.map(s => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(Song, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 40\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: songs.length > 0 ? renderList() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add a song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Songs;\nexport default Songs;\n\nsongList = () => {\n  const playlistSongs = this.props.songs.filter(song => {\n    return song.playlistIds.find(id => id === parseInt(this.props.match.params.playlistId, 10));\n  });\n  return playlistSongs.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: s.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 40\n  }, this));\n};\n\n/*#__PURE__*/\n_jsxDEV(\"ul\", {\n  children: this.songList()\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 5\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Songs.js"],"names":["React","Song","Songs","match","songs","deletePlaylist","renderList","playlistSongs","props","filter","song","playlistIds","find","id","parseInt","params","playlistId","map","s","length","songList","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAAsC;AAEhD,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMC,aAAa,GAAG,KAAKC,KAAL,CAAWJ,KAAX,CAAiBK,MAAjB,CAAyBC,IAAI,IAAI;AACnD,aAAOA,IAAI,CAACC,WAAL,CAAiBC,IAAjB,CAAuBC,EAAE,IAAIA,EAAE,KAAKC,QAAQ,CAAC,KAAKN,KAAL,CAAWL,KAAX,CAAiBY,MAAjB,CAAwBC,UAAzB,EAAqC,EAArC,CAA5C,CAAP;AACH,KAFqB,CAAtB;AAIA,WAAOT,aAAa,CAACU,GAAd,CAAmBC,CAAC,iBAAI;AAAA,6BAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAxB,CAAP;AACH,GAND;;AAQA,sBACE;AAAA,cACId,KAAK,CAACe,MAAN,GAAe,CAAf,GAAmBb,UAAU,EAA7B,gBAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADtC;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhBH;;KAAMJ,K;AAkBJ,eAAeA,KAAf;;AAGEkB,QAAQ,GAAG,MAAM;AACb,QAAMb,aAAa,GAAG,KAAKC,KAAL,CAAWJ,KAAX,CAAiBK,MAAjB,CAAyBC,IAAI,IAAI;AACnD,WAAOA,IAAI,CAACC,WAAL,CAAiBC,IAAjB,CAAuBC,EAAE,IAAIA,EAAE,KAAKC,QAAQ,CAAC,KAAKN,KAAL,CAAWL,KAAX,CAAiBY,MAAjB,CAAwBC,UAAzB,EAAqC,EAArC,CAA5C,CAAP;AACH,GAFqB,CAAtB;AAGA,SAAOT,aAAa,CAACU,GAAd,CAAmBC,CAAC,iBAAI;AAAA,cAAKA,CAAC,CAACG;AAAP;AAAA;AAAA;AAAA;AAAA,UAAxB,CAAP;AACH,CALD;;AAOA;AAAA;AAAA,YACK,KAAKD,QAAL;AADL;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react';\nimport Song from './Song'\n\nconst Songs = ({ match, songs, deletePlaylist }) => {\n\n    const renderList = () => {\n        const playlistSongs = this.props.songs.filter( song => {\n            return song.playlistIds.find( id => id === parseInt(this.props.match.params.playlistId, 10))\n        })\n\n        return playlistSongs.map( s => <ul><Song /></ul>)\n    }\n  \n    return (\n      <div>\n        { songs.length > 0 ? renderList() : <div>Add a song</div> }\n      </div>\n    )\n  \n  }\n    \n  export default Songs;\n\n\n    songList = () => {\n        const playlistSongs = this.props.songs.filter( song => {\n            return song.playlistIds.find( id => id === parseInt(this.props.match.params.playlistId, 10))\n        })\n        return playlistSongs.map( s => <li>{s.title}</li>)\n    }\n\n    <ul>\n        {this.songList()}\n    </ul>\n\n"]},"metadata":{},"sourceType":"module"}