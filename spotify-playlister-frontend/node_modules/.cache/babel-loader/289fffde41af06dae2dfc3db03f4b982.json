{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/registrations/Signup.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Holding from '../Holding';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      password_confirmation: '',\n      errors: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let confObj = {\n        user: {\n          username: this.state.username,\n          password: this.state.password,\n          password_confirmation: this.state.password_confirmation\n        }\n      };\n      fetch('http://localhost:3001/users', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        },\n        credentials: 'include',\n        body: JSON.stringify(confObj)\n      }).then(response => response.json()).then(json => {\n        if (json.isLoggedIn) {\n          this.props.addUser(json);\n          this.redirect();\n        } else {\n          this.setState({\n            errors: json.errors\n          });\n        }\n      }).catch(error => console.log('API errors:', error));\n    };\n\n    this.handleLoading = () => this.props.user.loading ? this.tempPage() : this.authUser();\n\n    this.authUser = () => this.props.user.isLoggedIn ? this.redirect() : this.loadPage();\n\n    this.redirect = () => this.props.history.push(`/users/${this.props.user.id}/playlists`);\n\n    this.tempPage = () => /*#__PURE__*/_jsxDEV(Holding, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 22\n    }, this);\n\n    this.loadPage = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"username\",\n            type: \"text\",\n            name: \"username\",\n            value: this.state.username,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"password\",\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"password confirmation\",\n            type: \"password\",\n            name: \"password_confirmation\",\n            value: this.state.password_confirmation,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            placeholder: \"submit\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"or \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.errors ? this.handleErrors() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.handleErrors = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.errors.map(error => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, error, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    // debugger\n    this.props.fetchUser();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.handleLoading()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 24\n    }, this);\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/registrations/Signup.js"],"names":["React","Component","Link","Holding","Signup","state","username","password","password_confirmation","errors","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","confObj","user","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","isLoggedIn","props","addUser","redirect","catch","error","console","log","handleLoading","loading","tempPage","authUser","loadPage","history","push","id","handleErrors","map","componentDidMount","fetchUser","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Holding from '../Holding';\n\nclass Signup extends Component {\n\n    state = { \n        username: '',\n        password: '',\n        password_confirmation: '',\n        errors: ''\n    };\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({ [name]: value })\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n    \n        let confObj = {\n            user: {\n                username: this.state.username,\n                password: this.state.password,\n                password_confirmation: this.state.password_confirmation\n            }\n        }\n\n        fetch('http://localhost:3001/users', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            credentials: 'include',\n            body: JSON.stringify(confObj)\n        })\n        .then(response => response.json())\n        .then (json => {\n            if (json.isLoggedIn) {\n              this.props.addUser(json)\n              this.redirect()\n            } else {\n              this.setState({ errors: json.errors })\n            }\n        })\n        .catch(error => console.log('API errors:', error))\n\n    };\n\n    componentDidMount() {\n        // debugger\n        this.props.fetchUser()\n    }\n\n    handleLoading = () => this.props.user.loading ? this.tempPage() : this.authUser();\n    authUser = () => this.props.user.isLoggedIn ? this.redirect() : this.loadPage();\n    redirect = () => this.props.history.push(`/users/${this.props.user.id}/playlists`);\n    \n    tempPage = () => <Holding />\n    loadPage = () => {\n        return (\n            <div>\n                <h1>Sign Up</h1>\n                    <form onSubmit={this.handleSubmit}>\n                    <input\n                        placeholder=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        value={this.state.username}\n                        onChange={this.handleChange}\n                    />\n                    <input \n                        placeholder=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                    <input\n                        placeholder=\"password confirmation\"\n                        type=\"password\"\n                        name=\"password_confirmation\"\n                        value={this.state.password_confirmation}\n                        onChange={this.handleChange}\n                    />\n                    <button placeholder=\"submit\" type=\"submit\">\n                        Sign Up\n                    </button>\n                    <div>\n                        or <Link to='/login'>Log In</Link>\n                    </div>\n                </form>\n                <div>\n                    { this.state.errors ? this.handleErrors() : null }\n                </div>\n            </div>\n        );\n    }\n\n    handleErrors = () => {\n        return (\n            <div>\n                <ul>\n                    {this.state.errors.map(error => {\n                        return <li key={error}>{error}</li>\n                    })}\n                </ul>\n            </div>\n        )\n    }\n\n    render () { return <div>{ this.handleLoading() }</div> }\n}\nexport default Signup;"]},"metadata":{},"sourceType":"module"}