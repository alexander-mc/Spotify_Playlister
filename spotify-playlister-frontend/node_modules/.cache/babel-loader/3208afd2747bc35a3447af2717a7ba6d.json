{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Songs.js\";\nimport React from 'react';\nimport Song from './Song';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songs = ({\n  songs,\n  match,\n  deleteSong\n}) => {\n  const playlistSongs = songs.filter(song => song.playlistIds.includes(parseInt(match.params.playlistId, 10)));\n  const songList = playlistSongs.map(song => /*#__PURE__*/_jsxDEV(Song, {\n    song: song,\n    deleteSong: deleteSong\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 49\n  }, this)); // return <ul>{playlistSongs.map( song => <Song song={song} deleteSong={deleteSong} /> )}</ul>\n  // playlistSongs = () => {\n  //     const songs = this.props.songs.filter( song => {\n  //         // debugger\n  //         if (song.id) {\n  //             if (song.playlistIds.find( id => id === parseInt(this.props.match.params.playlistId, 10))) {\n  //                 return true\n  //             } else {\n  //                 return false\n  //             }\n  //         }\n  //     })\n  //     return songs\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: songs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add a song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Songs;\nexport default Songs; // songList = () => {\n//     const playlistSongs = this.props.songs.filter( song => {\n//         return song.playlistIds.find( id => id === parseInt(this.props.match.params.playlistId, 10))\n//     })\n//     return playlistSongs.map( s => <li>{s.title}</li>)\n// }\n// <ul>\n//     {this.songList()}\n// </ul>\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Songs.js"],"names":["React","Song","Songs","songs","match","deleteSong","playlistSongs","filter","song","playlistIds","includes","parseInt","params","playlistId","songList","map","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAAkC;AAE5C,QAAMC,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAcC,IAAI,IAAIA,IAAI,CAACC,WAAL,CAAiBC,QAAjB,CAA0BC,QAAQ,CAACP,KAAK,CAACQ,MAAN,CAAaC,UAAd,EAA0B,EAA1B,CAAlC,CAAtB,CAAtB;AAEA,QAAMC,QAAQ,GAAGR,aAAa,CAACS,GAAd,CAAmBP,IAAI,iBAAI,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,UAAU,EAAEH;AAA9B;AAAA;AAAA;AAAA;AAAA,UAA3B,CAAjB,CAJ4C,CAM5C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,cACIF,KAAK,CAACa,MAAN,GAAe,CAAf,gBAAmB;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD7C;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5BH;;KAAMZ,K;AA8BJ,eAAeA,KAAf,C,CAGE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Song from './Song'\n\nconst Songs = ({ songs, match, deleteSong }) => {\n\n    const playlistSongs = songs.filter( song => song.playlistIds.includes(parseInt(match.params.playlistId, 10)) )\n\n    const songList = playlistSongs.map( song => <Song song={song} deleteSong={deleteSong} /> )\n    \n    // return <ul>{playlistSongs.map( song => <Song song={song} deleteSong={deleteSong} /> )}</ul>\n      \n    // playlistSongs = () => {\n    //     const songs = this.props.songs.filter( song => {\n    //         // debugger\n    //         if (song.id) {\n    //             if (song.playlistIds.find( id => id === parseInt(this.props.match.params.playlistId, 10))) {\n    //                 return true\n    //             } else {\n    //                 return false\n    //             }\n    //         }\n    //     })\n    //     return songs\n    // }\n\n    return (\n      <div>\n        { songs.length > 0 ? <ul>{songList}</ul> : <div>Add a song</div> }\n      </div>\n    )\n  \n  }\n    \n  export default Songs;\n\n\n    // songList = () => {\n    //     const playlistSongs = this.props.songs.filter( song => {\n    //         return song.playlistIds.find( id => id === parseInt(this.props.match.params.playlistId, 10))\n    //     })\n    //     return playlistSongs.map( s => <li>{s.title}</li>)\n    // }\n\n    // <ul>\n    //     {this.songList()}\n    // </ul>\n\n"]},"metadata":{},"sourceType":"module"}