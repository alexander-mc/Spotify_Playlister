{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { v4 as uuid } from \"uuid\";\nconst rootReducer = combineReducers({\n  user: userReducer,\n  playlists: playlistsReducer,\n  songs: songsReducer\n});\nexport default rootReducer; // TODO: MODIFY REDUCERS\n\nfunction userReducer(state = {\n  isLoggedIn: false,\n  loading: true\n}, action) {\n  switch (action.type) {\n    case \"LOADING_USER\":\n      return { ...state,\n        loading: true\n      };\n\n    case \"ADD_USER\":\n      return { ...action.user,\n        loading: false\n      };\n\n    case \"DELETE_USER\":\n      return {\n        isLoggedIn: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction playlistsReducer(state = [], action) {\n  switch (action.type) {\n    case \"ADD_PLAYLIST\":\n      return [...state, {\n        id: uuid(),\n        text: action.text\n      }];\n\n    case \"DELETE_PLAYLIST\":\n      return state.filter(r => r.id !== action.id);\n\n    default:\n      return state;\n  }\n}\n\nfunction songsReducer(state = [], action) {\n  switch (action.type) {\n    case \"ADD_SONG\":\n      const review = {\n        text: action.review.text,\n        restaurantId: action.review.restaurantId,\n        id: uuid()\n      };\n      return [...state, review];\n    // return [...state, {id: cuid(), text: action.text, restaurantId: action.restaurantId}]\n\n    case \"DELETE_SONG\":\n      return state.filter(r => r.id !== action.id);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/reducers/managePlaylist.js"],"names":["combineReducers","v4","uuid","rootReducer","user","userReducer","playlists","playlistsReducer","songs","songsReducer","state","isLoggedIn","loading","action","type","id","text","filter","r","review","restaurantId"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AAEA,MAAMC,WAAW,GAAGH,eAAe,CAAC;AAChCI,EAAAA,IAAI,EAAEC,WAD0B;AAEhCC,EAAAA,SAAS,EAAEC,gBAFqB;AAGhCC,EAAAA,KAAK,EAAEC;AAHyB,CAAD,CAAnC;AAMA,eAAeN,WAAf,C,CAEA;;AAEA,SAASE,WAAT,CAAqBK,KAAK,GAAG;AAAEC,EAAAA,UAAU,EAAE,KAAd;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CAA7B,EAAmEC,MAAnE,EAA2E;AAEvE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,aAAO,EAAE,GAAGJ,KAAL;AAAYE,QAAAA,OAAO,EAAE;AAArB,OAAP;;AAEJ,SAAK,UAAL;AACI,aAAO,EAAE,GAAGC,MAAM,CAACT,IAAZ;AAAkBQ,QAAAA,OAAO,EAAE;AAA3B,OAAP;;AAEJ,SAAK,aAAL;AACI,aAAO;AAAED,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,OAAO,EAAE;AAA9B,OAAP;;AAEJ;AACI,aAAOF,KAAP;AAXR;AAaH;;AAED,SAASH,gBAAT,CAA0BG,KAAK,GAAG,EAAlC,EAAsCG,MAAtC,EAA8C;AAE1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,aAAO,CAAC,GAAGJ,KAAJ,EAAW;AAACK,QAAAA,EAAE,EAAEb,IAAI,EAAT;AAAac,QAAAA,IAAI,EAAEH,MAAM,CAACG;AAA1B,OAAX,CAAP;;AAEJ,SAAK,iBAAL;AACI,aAAON,KAAK,CAACO,MAAN,CAAcC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASF,MAAM,CAACE,EAAnC,CAAP;;AAEJ;AACI,aAAOL,KAAP;AARR;AAUH;;AAED,SAASD,YAAT,CAAsBC,KAAK,GAAG,EAA9B,EAAkCG,MAAlC,EAA0C;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,YAAMK,MAAM,GAAG;AAAEH,QAAAA,IAAI,EAAEH,MAAM,CAACM,MAAP,CAAcH,IAAtB;AAA4BI,QAAAA,YAAY,EAAEP,MAAM,CAACM,MAAP,CAAcC,YAAxD;AAAsEL,QAAAA,EAAE,EAAEb,IAAI;AAA9E,OAAf;AACA,aAAO,CAAC,GAAGQ,KAAJ,EAAWS,MAAX,CAAP;AACA;;AAEJ,SAAK,aAAL;AACI,aAAOT,KAAK,CAACO,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASF,MAAM,CAACE,EAAlC,CAAP;;AAEJ;AACI,aAAOL,KAAP;AAVR;AAYH","sourcesContent":["import { combineReducers } from \"redux\"\nimport {v4 as uuid} from \"uuid\"; \n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    playlists: playlistsReducer,\n    songs: songsReducer\n})\n\nexport default rootReducer;\n\n// TODO: MODIFY REDUCERS\n\nfunction userReducer(state = { isLoggedIn: false, loading: true }, action) {\n    \n    switch (action.type) {\n        case \"LOADING_USER\":\n            return { ...state, loading: true }\n        \n        case \"ADD_USER\":\n            return { ...action.user, loading: false }\n\n        case \"DELETE_USER\":\n            return { isLoggedIn: false, loading: false }\n\n        default:\n            return state\n    }\n}\n\nfunction playlistsReducer(state = [], action) {\n    \n    switch (action.type) {\n        case \"ADD_PLAYLIST\":\n            return [...state, {id: uuid(), text: action.text}]\n            \n        case \"DELETE_PLAYLIST\":\n            return state.filter( r => r.id !== action.id )\n            \n        default:\n            return state;\n    }\n}\n\nfunction songsReducer(state = [], action) {\n    switch (action.type) {\n        case \"ADD_SONG\":\n            const review = { text: action.review.text, restaurantId: action.review.restaurantId, id: uuid() };\n            return [...state, review]\n            // return [...state, {id: cuid(), text: action.text, restaurantId: action.restaurantId}]\n\n        case \"DELETE_SONG\":\n            return state.filter(r => r.id !== action.id)\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}