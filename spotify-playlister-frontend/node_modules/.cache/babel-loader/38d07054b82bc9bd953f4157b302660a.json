{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/search/SearchInput.js\";\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport styles from './Search.module.css';\nimport searchIcon from '../../assets/images/search-icon.png';\nimport deleteResultsIcon from '../../assets/images/delete-results-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchInput extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\"\n    };\n\n    this.accessSpotifyAPI = query => {\n      // Authorize user via Spotify's Client Credientials authorization flow\n      // For more info: https://github.com/spotify/web-api-auth-examples\n      const request = require('request');\n\n      const authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        headers: {\n          'Authorization': 'Basic ' + new Buffer(SearchInput.CLIENT_ID + ':' + SearchInput.CLIENT_SECRET).toString('base64')\n        },\n        form: {\n          grant_type: 'client_credentials'\n        },\n        json: true\n      };\n      request.post(authOptions, (error, response, body) => {\n        if (!error && response.statusCode === 200) {\n          // Access Spotify API via Spotify Web API JS wrapper\n          // For more info: https://github.com/JMPerez/spotify-web-api-js\n          const token = body.access_token;\n          const spotify = new SpotifyWebApi();\n          spotify.setAccessToken(token);\n          spotify.searchTracks(query, {\n            limit: 3\n          }).then(data => {\n            data.tracks.items.length > 0 ? this.props.addSearchResults(data.tracks.items) : this.props.addSearchMessage(\"Sorry, we could not find any songs\");\n          }, err => {\n            console.error(err);\n          });\n        }\n      });\n    };\n\n    this.handleChange = e => this.setState({\n      query: e.target.value\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.accessSpotifyAPI(this.state.query);\n      this.setState({\n        query: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['search-container'],\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles['find-song-txt'],\n        children: \"SEARCH FOR A SONG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles['form-grid'],\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles['search-input'],\n          type: \"text\",\n          onChange: this.handleChange,\n          value: this.state.query,\n          placeholder: \"Enter the name of a song, artist, or album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles['search-icon'],\n          title: \"Search\",\n          type: \"image\",\n          src: searchIcon,\n          alt: \"Submit query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles['delete-results-icon'],\n          title: \"Clear all\",\n          onClick: this.props.deleteSearchResults,\n          src: deleteResultsIcon,\n          alt: \"Delete sesarch results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nSearchInput.CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nSearchInput.CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\nexport default SearchInput;","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/search/SearchInput.js"],"names":["React","Component","SpotifyWebApi","styles","searchIcon","deleteResultsIcon","SearchInput","state","query","accessSpotifyAPI","request","require","authOptions","url","headers","Buffer","CLIENT_ID","CLIENT_SECRET","toString","form","grant_type","json","post","error","response","body","statusCode","token","access_token","spotify","setAccessToken","searchTracks","limit","then","data","tracks","items","length","props","addSearchResults","addSearchMessage","err","console","handleChange","e","setState","target","value","handleSubmit","preventDefault","render","deleteSearchResults","process","env","REACT_APP_CLIENT_ID","REACT_APP_CLIENT_SECRET"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport styles from './Search.module.css'\nimport searchIcon from '../../assets/images/search-icon.png'\nimport deleteResultsIcon from '../../assets/images/delete-results-icon.png'\n\nclass SearchInput extends Component {\n\n    static CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n    static CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n  \n    state = { query: \"\" }\n    \n    accessSpotifyAPI = (query) => {\n        \n      // Authorize user via Spotify's Client Credientials authorization flow\n      // For more info: https://github.com/spotify/web-api-auth-examples\n      const request = require('request')      \n      const authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        headers: { 'Authorization': 'Basic ' + (new Buffer(SearchInput.CLIENT_ID + ':' + SearchInput.CLIENT_SECRET).toString('base64')) },\n        form: { grant_type: 'client_credentials' },\n        json: true\n      };\n        \n      request.post(authOptions, (error, response, body) => {\n        if (!error && response.statusCode === 200) {\n          \n          // Access Spotify API via Spotify Web API JS wrapper\n          // For more info: https://github.com/JMPerez/spotify-web-api-js\n          const token = body.access_token;\n          const spotify = new SpotifyWebApi();\n          \n          spotify.setAccessToken(token)\n          spotify.searchTracks(query, { limit: 3 }).then(\n            (data) => {\n              data.tracks.items.length > 0 ?\n                this.props.addSearchResults( data.tracks.items ) :\n                this.props.addSearchMessage( \"Sorry, we could not find any songs\" )\n            },\n            (err) => {\n              console.error(err);\n            }\n          )\n        }\n      })\n    }\n  \n    handleChange = (e) => this.setState({ query: e.target.value })\n    handleSubmit = (e) => {\n      e.preventDefault();        \n      this.accessSpotifyAPI(this.state.query)\n      this.setState({ query: '' })\n    }    \n\n    render() {\n        return (\n            <div className={styles['search-container']} >\n                <h2 className={styles['find-song-txt']} >SEARCH FOR A SONG</h2>\n                <form className={styles['form-grid']} onSubmit={ this.handleSubmit }>\n                    <input className={styles['search-input']} type=\"text\" onChange={ this.handleChange } value={this.state.query} placeholder='Enter the name of a song, artist, or album' />\n                    <input className={styles['search-icon']} title='Search' type=\"image\" src={searchIcon} alt='Submit query' />\n                    <img className={styles['delete-results-icon']} title='Clear all' onClick={this.props.deleteSearchResults} src={deleteResultsIcon} alt='Delete sesarch results' />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SearchInput;\n\n"]},"metadata":{},"sourceType":"module"}