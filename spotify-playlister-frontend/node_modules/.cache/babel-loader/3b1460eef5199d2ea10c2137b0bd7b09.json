{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/registrations/Login';\nimport Signup from './components/registrations/Signup';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedIn: false,\n      user: {}\n    };\n\n    this.loginStatus = () => {\n      fetch('http://localhost:3001/logged_in', {\n        credentials: 'include'\n      } // could also use 'same-origin'\n      ).then(response => response.json()).then(json => {\n        debugger;\n        console.log(json);\n\n        if (json.data.logged_in) {\n          this.handleLogin(json);\n        } else {\n          this.handleLogout();\n        }\n      }).catch(error => console.log('api errors:', error));\n    };\n\n    this.handleLogin = data => {\n      this.setState({\n        isLoggedIn: true,\n        user: data.user\n      });\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        isLoggedIn: false,\n        user: {}\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loginStatus();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(Home, { ...props,\n              handleLogout: this.handleLogout,\n              loggedInStatus: this.state.isLoggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            render: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n              handleLogin: this.handleLogin,\n              loggedInStatus: this.state.isLoggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            render: props => /*#__PURE__*/_jsxDEV(Signup, { ...props,\n              handleLogin: this.handleLogin,\n              loggedInStatus: this.state.isLoggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Home","Login","Signup","App","state","isLoggedIn","user","loginStatus","fetch","credentials","then","response","json","console","log","data","logged_in","handleLogin","handleLogout","catch","error","setState","componentDidMount","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\nimport './App.css';\n\nclass App extends Component {\n  \n  state = {\n    isLoggedIn: false,\n    user: {}\n  }\n\n  componentDidMount() {\n    this.loginStatus()\n  }\n\n  loginStatus = () => {\n    fetch('http://localhost:3001/logged_in', {\n      credentials: 'include'\n    } // could also use 'same-origin'\n    ).then(response => response.json()\n    ).then(json => {\n      debugger\n      console.log(json)\n      if (json.data.logged_in) {\n        this.handleLogin(json)\n      } else {\n        this.handleLogout()\n      }\n    })\n    .catch(error => console.log('api errors:', error))\n  }\n\n  // loginStatus = () => {\n  //   axios.get('http://localhost:3001/logged_in', \n  //  {withCredentials: true})\n  //   .then(response => {\n  //     if (response.data.logged_in) {\n  //       this.handleLogin(response)\n  //     } else {\n  //       this.handleLogout()\n  //     }\n  //   })\n  //   .catch(error => console.log('api errors:', error))\n  // }\n  \n  handleLogin = (data) => {\n    this.setState({\n      isLoggedIn: true,\n      user: data.user\n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n    isLoggedIn: false,\n    user: {}\n    })\n  }\n\n  render() {\n    return (\n      <div>\n         <Router>\n          <Switch>\n            <Route exact path='/' \n              render={props => (\n              <Home {...props} handleLogout={this.handleLogout} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/login' \n              render={props => (\n              <Login {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n              <Signup {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}