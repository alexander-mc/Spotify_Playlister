{"ast":null,"code":"export const updateUserInfo = userInfo => {\n  return {\n    type: \"UPDATE_USER_INFO\",\n    userInfo\n  };\n};\nexport const fetchuserInfo = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_USER_INFO'\n    });\n    fetch('http://localhost:3001/logged_in', {\n      credentials: 'include'\n    }).then(response => response.json()).then(json => {\n      let userInfo;\n      json.logged_in ? userInfo = {\n        isLoggedIn: true,\n        user: json.user\n      } : userInfo = {\n        isLoggedIn: false,\n        user: {}\n      };\n      dispatch(updateUserInfo(userInfo));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/actions/userInfoActions.js"],"names":["updateUserInfo","userInfo","type","fetchuserInfo","dispatch","fetch","credentials","then","response","json","logged_in","isLoggedIn","user"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAGC,QAAQ,IAAI;AACtC,SAAO;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA4BD,IAAAA;AAA5B,GAAP;AACH,CAFM;AAIP,OAAO,MAAME,aAAa,GAAG,MAAM;AAC/B,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAG,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAApC,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,UAAIR,QAAJ;AACAQ,MAAAA,IAAI,CAACC,SAAL,GACAT,QAAQ,GAAI;AAAEU,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,IAAI,EAAEH,IAAI,CAACG;AAA/B,OADZ,GAEAX,QAAQ,GAAI;AAAEU,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,IAAI,EAAE;AAA3B,OAFZ;AAGAR,MAAAA,QAAQ,CAACJ,cAAc,CAACC,QAAD,CAAf,CAAR;AACH,KARD;AASH,GAXD;AAYH,CAbM","sourcesContent":["export const updateUserInfo = userInfo => {\n    return { type: \"UPDATE_USER_INFO\", userInfo }\n}\n\nexport const fetchuserInfo = () => {\n    return dispatch => {\n        dispatch({type: 'LOADING_USER_INFO'});\n        fetch('http://localhost:3001/logged_in', { credentials: 'include' })\n        .then(response => response.json())\n        .then(json => {\n            let userInfo;\n            json.logged_in ?\n            userInfo = ({ isLoggedIn: true, user: json.user }) :\n            userInfo = ({ isLoggedIn: false, user: {} })\n            dispatch(updateUserInfo(userInfo))\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}