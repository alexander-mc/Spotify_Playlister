{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/playlists/PlaylistInput.js\";\nimport React, { Component } from 'react';\nimport styles from './Playlists.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlaylistInput extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      errors: \"\"\n    };\n\n    this.handleChange = e => this.setState({\n      name: e.target.value\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        user,\n        addPlaylist,\n        match,\n        history\n      } = this.props;\n      const configObj = {\n        playlist: {\n          name: this.state.name,\n          user_id: user.id\n        }\n      };\n      fetch(`http://localhost:3001${match.url}`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        },\n        credentials: 'include',\n        body: JSON.stringify(configObj)\n      }).then(response => response.json()).then(json => {\n        if (!json.errors) {\n          addPlaylist(json);\n          history.push(`${match.url}/${json.id}/songs`);\n        } else {\n          this.setState({\n            errors: json.errors\n          });\n        }\n      }).catch(error => console.log('API errors:', error));\n    };\n\n    this.handleErrors = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.errors.map(error => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, error, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ADD A PLAYLIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), this.state.errors ? this.handleErrors() : null, /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.handleChange,\n          value: this.state.name,\n          placeholder: \"Enter a playlist name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\n;\nexport default PlaylistInput;","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/playlists/PlaylistInput.js"],"names":["React","Component","styles","PlaylistInput","state","name","errors","handleChange","e","setState","target","value","handleSubmit","preventDefault","user","addPlaylist","match","history","props","configObj","playlist","user_id","id","fetch","url","method","headers","credentials","body","JSON","stringify","then","response","json","push","catch","error","console","log","handleErrors","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Playlists.module.css';\n\nclass PlaylistInput extends Component {\n\n    state = { name: \"\", errors: \"\" }\n    \n    handleChange = (e) => this.setState({ name: e.target.value })\n    handleSubmit = (e) => {\n        e.preventDefault();\n        \n        const { user, addPlaylist, match, history } = this.props\n        const configObj = {\n            playlist: { name: this.state.name, user_id: user.id }\n        }\n\n        fetch(`http://localhost:3001${match.url}`, {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            credentials: 'include',\n            body: JSON.stringify(configObj)\n        })\n        .then(response => response.json())\n        .then( json => {\n            \n            if (!json.errors) {\n                addPlaylist(json)\n                history.push(`${match.url}/${json.id}/songs`)\n            } else {\n                this.setState({ errors: json.errors })\n            }\n\n        })\n        .catch(error => console.log('API errors:', error))\n    }\n\n    handleErrors = () => {\n        return (\n            <div>\n                <ul>\n                    {this.state.errors.map(error => {\n                        return <li key={error}>{error}</li>\n                    })}\n                </ul>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n          <div >\n            <h2>ADD A PLAYLIST</h2>\n            { this.state.errors ? this.handleErrors() : null }\n            <form onSubmit={ this.handleSubmit }>\n              <input type=\"text\" onChange={ this.handleChange } value={this.state.name} placeholder='Enter a playlist name' />\n              <input type=\"submit\" />\n            </form>\n          </div>\n        );\n    }\n};\n\nexport default PlaylistInput;"]},"metadata":{},"sourceType":"module"}