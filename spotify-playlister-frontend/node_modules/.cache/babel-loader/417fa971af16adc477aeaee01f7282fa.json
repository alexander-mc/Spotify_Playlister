{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PlaylistsContainer from '../containers/PlaylistsContainer';\nimport Home from '../components/registrations/Home';\nimport Login from '../components/registrations/Login';\nimport Signup from '../components/registrations/Signup';\nimport NoMatch from '../components/NoMatch';\nimport { updateUserInfo, fetchUserInfo } from '../actions/userInfoActions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    const {\n      userInfo,\n      updateUserInfo,\n      fetchUserInfo\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(Home, { ...props,\n              fetchUserInfo: fetchUserInfo,\n              userInfo: userInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            render: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n              fetchUserInfo: fetchUserInfo,\n              userInfo: userInfo,\n              updateUserInfo: updateUserInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            render: props => /*#__PURE__*/_jsxDEV(Signup, { ...props,\n              fetchUserInfo: fetchUserInfo,\n              userInfo: userInfo,\n              updateUserInfo: updateUserInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/users/:user_id/playlists\",\n            render: props => /*#__PURE__*/_jsxDEV(PlaylistsContainer, { ...props,\n              fetchUserInfo: fetchUserInfo,\n              userInfo: userInfo,\n              updateUserInfo: updateUserInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            render: () => /*#__PURE__*/_jsxDEV(NoMatch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const mapStateToProps = ({userInfo}) => ({userInfo})\n// const mapDispatchToProps = dispatch => ({\n//   updateUserInfo: userInfo => dispatch({ type: \"UPDATE_USER_INFO\", userInfo })\n// })\n\n\nexport default connect(({\n  userInfo\n}) => ({\n  userInfo\n}), {\n  fetchUserInfo,\n  updateUserInfo\n})(App);","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","connect","PlaylistsContainer","Home","Login","Signup","NoMatch","updateUserInfo","fetchUserInfo","App","render","userInfo","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,4BAA9C;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAE1Bc,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,QAAD;AAAWJ,MAAAA,cAAX;AAA2BC,MAAAA;AAA3B,QAA4C,KAAKI,KAAvD;AAEA,wBACE;AAAA,6BACG,QAAC,MAAD;AAAA,+BACC,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AACQ,YAAA,IAAI,EAAC,GADb;AAEE,YAAA,MAAM,EAAEA,KAAK,iBACb,QAAC,IAAD,OAAUA,KAAV;AAAiB,cAAA,aAAa,EAAEJ,aAAhC;AAA+C,cAAA,QAAQ,EAAEG;AAAzD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AACQ,YAAA,IAAI,EAAC,QADb;AAEE,YAAA,MAAM,EAAEC,KAAK,iBACb,QAAC,KAAD,OAAWA,KAAX;AAAkB,cAAA,aAAa,EAAEJ,aAAjC;AAAgD,cAAA,QAAQ,EAAEG,QAA1D;AAAoE,cAAA,cAAc,EAAEJ;AAApF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBANF,eAWE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AACQ,YAAA,IAAI,EAAC,SADb;AAEE,YAAA,MAAM,EAAEK,KAAK,iBACb,QAAC,MAAD,OAAYA,KAAZ;AAAmB,cAAA,aAAa,EAAEJ,aAAlC;AAAiD,cAAA,QAAQ,EAAEG,QAA3D;AAAqE,cAAA,cAAc,EAAEJ;AAArF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBAXF,eAgBE,QAAC,KAAD;AACE,YAAA,KAAK,MADP;AACQ,YAAA,IAAI,EAAC,2BADb;AAEE,YAAA,MAAM,EAAEK,KAAK,iBACb,QAAC,kBAAD,OAAwBA,KAAxB;AAA+B,cAAA,aAAa,EAAEJ,aAA9C;AAA6D,cAAA,QAAQ,EAAEG,QAAvE;AAAiF,cAAA,cAAc,EAAEJ;AAAjG;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAqBE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,MAAM,EAAE,mBAAM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAlCyB,C,CAqC5B;AACA;AACA;AACA;;;AAEA,eAAeN,OAAO,CAAE,CAAC;AAACU,EAAAA;AAAD,CAAD,MAAiB;AAACA,EAAAA;AAAD,CAAjB,CAAF,EAAgC;AAACH,EAAAA,aAAD;AAAgBD,EAAAA;AAAhB,CAAhC,CAAP,CAAyEE,GAAzE,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport PlaylistsContainer from '../containers/PlaylistsContainer'\nimport Home from '../components/registrations/Home'\nimport Login from '../components/registrations/Login'\nimport Signup from '../components/registrations/Signup'\nimport NoMatch from '../components/NoMatch'\nimport { updateUserInfo, fetchUserInfo } from '../actions/userInfoActions'\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    const {userInfo, updateUserInfo, fetchUserInfo} = this.props\n\n    return (\n      <div>\n         <Router>\n          <Switch>\n            <Route\n              exact path='/' \n              render={props => (\n              <Home {...props} fetchUserInfo={fetchUserInfo} userInfo={userInfo} /> )}\n            />\n            <Route \n              exact path='/login'\n              render={props => (\n              <Login {...props} fetchUserInfo={fetchUserInfo} userInfo={userInfo} updateUserInfo={updateUserInfo} /> )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n              <Signup {...props} fetchUserInfo={fetchUserInfo} userInfo={userInfo} updateUserInfo={updateUserInfo} /> )}\n            />\n            <Route\n              exact path='/users/:user_id/playlists'\n              render={props => (\n              <PlaylistsContainer {...props} fetchUserInfo={fetchUserInfo} userInfo={userInfo} updateUserInfo={updateUserInfo} /> )}\n            />\n            <Route path='*' render={() => <NoMatch /> }/>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = ({userInfo}) => ({userInfo})\n// const mapDispatchToProps = dispatch => ({\n//   updateUserInfo: userInfo => dispatch({ type: \"UPDATE_USER_INFO\", userInfo })\n// })\n\nexport default connect( ({userInfo}) => ({userInfo}), {fetchUserInfo, updateUserInfo} )(App);"]},"metadata":{},"sourceType":"module"}