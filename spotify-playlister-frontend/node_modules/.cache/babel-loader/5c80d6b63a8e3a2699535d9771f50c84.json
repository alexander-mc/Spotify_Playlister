{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/SongsContainer.js\";\nimport React, { Component } from 'react';\nimport Holding from '../components/Holding';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SongsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => this.props.user.loading ? this.tempPage() : this.authUser();\n\n    this.authUser = () => {\n      // Check user has logged in + :userId matches logged in user id\n      // If :userId does not match logged in user id, force correct user id in url and redirect PlaylistContainer\n      const isValidUser = this.props.user.id === parseInt(this.props.match.params.userId, 10);\n      return isValidUser ? this.loadPage() : this.redirect();\n    };\n\n    this.redirect = () => this.props.history.push('/');\n\n    this.tempPage = () => /*#__PURE__*/_jsxDEV(Holding, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 22\n    }, this);\n\n    this.loadPage = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Playlist Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.handleLoading()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }, this);\n  }\n\n}\n\n;\nexport default SongsContainer;","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/SongsContainer.js"],"names":["React","Component","Holding","connect","SongsContainer","handleLoading","props","user","loading","tempPage","authUser","isValidUser","id","parseInt","match","params","userId","loadPage","redirect","history","push","componentDidMount","fetchUser","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAMnCI,aANmC,GAMnB,MAAM,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,GAA0B,KAAKC,QAAL,EAA1B,GAA4C,KAAKC,QAAL,EAN/B;;AAAA,SAOnCA,QAPmC,GAOxB,MAAM;AACb;AACA;AACA,YAAMC,WAAW,GAAG,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,EAAhB,KAAuBC,QAAQ,CAAC,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBC,MAAzB,EAAiC,EAAjC,CAAnD;AACA,aAAOL,WAAW,GAAG,KAAKM,QAAL,EAAH,GAAqB,KAAKC,QAAL,EAAvC;AACD,KAZgC;;AAAA,SAcjCA,QAdiC,GActB,MAAM,KAAKZ,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAdgB;;AAAA,SAgBnCX,QAhBmC,GAgBxB,mBAAM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAhBkB;;AAAA,SAkBnCQ,QAlBmC,GAkBxB,MAAM;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KApBkC;AAAA;;AAEnCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,KAAL,CAAWgB,SAAX;AACH;;AAkBDC,EAAAA,MAAM,GAAI;AAAE,wBAAO;AAAA,gBAAO,KAAKlB,aAAL;AAAP;AAAA;AAAA;AAAA;AAAA,YAAP;AAA4C;;AAtBrB;;AAwBtC;AAED,eAAeD,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport Holding from '../components/Holding'\nimport { connect } from 'react-redux'\n\nclass SongsContainer extends Component {\n\n    componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    handleLoading = () => this.props.user.loading ? this.tempPage() : this.authUser()\n    authUser = () => {\n        // Check user has logged in + :userId matches logged in user id\n        // If :userId does not match logged in user id, force correct user id in url and redirect PlaylistContainer\n        const isValidUser = this.props.user.id === parseInt(this.props.match.params.userId, 10)\n        return isValidUser ? this.loadPage() : this.redirect()\n      }\n      \n      redirect = () => this.props.history.push('/')\n\n    tempPage = () => <Holding />\n\n    loadPage = () => {\n        return <div>Playlist Songs</div>\n    } \n    \n    render () { return <div>{ this.handleLoading() }</div> }\n\n};\n\nexport default SongsContainer;"]},"metadata":{},"sourceType":"module"}