{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Song.js\";\nimport React from 'react';\nimport { updateSong } from '../../actions/songActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Song = ({\n  playlistSong,\n  match,\n  deleteSong\n}) => {\n  const handleClick = () => {\n    const configObj = {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      credentials: 'include'\n    };\n    debugger;\n    fetch(`http://localhost:3001${match.url}/${playlistSong.id}`, configObj).then(response => response.json()) // TODO: Revise below code + destroy song in controller so that you are removing the playlist id from playlistIds/playlist_song and not actually removing the song\n    .then(json => {\n      if (!json.errors) {\n        debugger;\n        const index = playlistSong.playlistIds.indexOf(playlistSong.id);\n        updateSong(song);\n      } else {\n        alert(json.errors.join(\"\\n\"));\n      }\n    }).catch(error => console.log('API errors:', error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Song: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: playlistSong.url,\n        children: playlistSong.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Album: \", playlistSong.album_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Artists: \", JSON.parse(playlistSong.artists).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \" X \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, playlistSong.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Song;\nexport default Song;\n\nvar _c;\n\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Song.js"],"names":["React","updateSong","Song","playlistSong","match","deleteSong","handleClick","configObj","method","headers","credentials","fetch","url","id","then","response","json","errors","index","playlistIds","indexOf","song","alert","join","catch","error","console","log","title","album_name","JSON","parse","artists"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,2BAA3B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AAEhD,QAAMC,WAAW,GAAG,MAAM;AAItB,UAAMC,SAAS,GAAG;AACdC,MAAAA,MAAM,EAAE,QADM;AAEdC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFK;AAGdC,MAAAA,WAAW,EAAE;AAHC,KAAlB;AAKA;AACAC,IAAAA,KAAK,CAAE,wBAAuBP,KAAK,CAACQ,GAAI,IAAGT,YAAY,CAACU,EAAG,EAAtD,EAAyDN,SAAzD,CAAL,CACKO,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEI;AAFJ,KAGKF,IAHL,CAGUE,IAAI,IAAI;AACV,UAAI,CAACA,IAAI,CAACC,MAAV,EAAkB;AACd;AACA,cAAMC,KAAK,GAAGf,YAAY,CAACgB,WAAb,CAAyBC,OAAzB,CAAiCjB,YAAY,CAACU,EAA9C,CAAd;AACAZ,QAAAA,UAAU,CAACoB,IAAD,CAAV;AACH,OAJD,MAIO;AACHC,QAAAA,KAAK,CAACN,IAAI,CAACC,MAAL,CAAYM,IAAZ,CAAiB,IAAjB,CAAD,CAAL;AACH;AACJ,KAXL,EAYKC,KAZL,CAYWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B,CAZpB;AAaH,GAvBD;;AAyBA,sBACI;AAAA,4BACI;AAAA,wCAAS;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,GAAG,EAAC,qBAAvB;AAA6C,QAAA,IAAI,EAAEtB,YAAY,CAACS,GAAhE;AAAA,kBAAsET,YAAY,CAACyB;AAAnF;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,4BAAWzB,YAAY,CAAC0B,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BAAaC,IAAI,CAACC,KAAL,CAAW5B,YAAY,CAAC6B,OAAxB,EAAiCT,IAAjC,CAAsC,IAAtC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEjB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,KAAUH,YAAY,CAACU,EAAvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CAnCH;;KAAMX,I;AAqCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { updateSong } from '../../actions/songActions';\n\nconst Song = ({playlistSong, match, deleteSong}) => {\n    \n    const handleClick = () => {\n\n        \n\n        const configObj = {\n            method: 'DELETE',\n            headers: {'Content-type': 'application/json; charset=UTF-8'},\n            credentials: 'include'\n        }\n        debugger\n        fetch(`http://localhost:3001${match.url}/${playlistSong.id}`, configObj)   \n            .then(response => response.json())\n            // TODO: Revise below code + destroy song in controller so that you are removing the playlist id from playlistIds/playlist_song and not actually removing the song\n            .then(json => {\n                if (!json.errors) {\n                    debugger\n                    const index = playlistSong.playlistIds.indexOf(playlistSong.id)\n                    updateSong(song)\n                } else {\n                    alert(json.errors.join(\"\\n\"))\n                } \n            })\n            .catch(error => console.log('API errors:', error))\n    }\n\n    return (\n        <div key={playlistSong.id}>\n            <p>Song: <a target=\"_blank\" rel=\"noopener noreferrer\" href={playlistSong.url}>{playlistSong.title}</a></p>\n            <p>Album: {playlistSong.album_name}</p>\n            <p>Artists: {JSON.parse(playlistSong.artists).join(', ')}</p>\n            <button onClick={handleClick} > X </button>\n        </div>\n    );\n  }\n \nexport default Song;"]},"metadata":{},"sourceType":"module"}