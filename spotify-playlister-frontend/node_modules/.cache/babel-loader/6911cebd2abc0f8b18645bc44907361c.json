{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/search/SearchResult.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = ({\n  match,\n  song,\n  songs,\n  addSong,\n  deleteSearchResults\n}) => {\n  const handleClick = () => {\n    debugger;\n    const configObj = {\n      song: {\n        title: song.name,\n        album_name: song.album.name,\n        artists: song.artists.map(a => a.name),\n        url: song.external_urls.spotify,\n        spotify_id: song.id\n      }\n    };\n    fetch(`http://localhost:3001${match.url}`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      credentials: 'include',\n      body: JSON.stringify(configObj)\n    }).then(response => response.json()).then(json => {\n      if (!json.errors) {\n        deleteSearchResults();\n        addSong(json);\n      } else {\n        alert(json.errors.join(\"\\n\"));\n      }\n    }).catch(error => console.log('API errors:', error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Song: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: song.external_urls.spotify,\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Album: \", song.album.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Artists: \", song.artists.map(a => a.name).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, song.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/search/SearchResult.js"],"names":["React","SearchResult","match","song","songs","addSong","deleteSearchResults","handleClick","configObj","title","name","album_name","album","artists","map","a","url","external_urls","spotify","spotify_id","id","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","errors","alert","join","catch","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,OAArB;AAA8BC,EAAAA;AAA9B,CAAD,KAAwD;AAEzE,QAAMC,WAAW,GAAG,MAAM;AAEtB;AAIA,UAAMC,SAAS,GAAG;AACdL,MAAAA,IAAI,EAAE;AACFM,QAAAA,KAAK,EAAEN,IAAI,CAACO,IADV;AAEFC,QAAAA,UAAU,EAAER,IAAI,CAACS,KAAL,CAAWF,IAFrB;AAGFG,QAAAA,OAAO,EAAEV,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACL,IAAzB,CAHP;AAIFM,QAAAA,GAAG,EAAEb,IAAI,CAACc,aAAL,CAAmBC,OAJtB;AAKFC,QAAAA,UAAU,EAAEhB,IAAI,CAACiB;AALf;AADQ,KAAlB;AAUAC,IAAAA,KAAK,CAAE,wBAAuBnB,KAAK,CAACc,GAAI,EAAnC,EAAsC;AACvCM,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF8B;AAGvCC,MAAAA,WAAW,EAAE,SAH0B;AAIvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,SAAf;AAJiC,KAAtC,CAAL,CAMCoB,IAND,CAMMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANlB,EAOCF,IAPD,CAOOE,IAAI,IAAI;AACX,UAAI,CAACA,IAAI,CAACC,MAAV,EAAkB;AACdzB,QAAAA,mBAAmB;AACnBD,QAAAA,OAAO,CAACyB,IAAD,CAAP;AACH,OAHD,MAGO;AACHE,QAAAA,KAAK,CAACF,IAAI,CAACC,MAAL,CAAYE,IAAZ,CAAiB,IAAjB,CAAD,CAAL;AACH;AAEJ,KAfD,EAgBCC,KAhBD,CAgBOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B,CAhBhB;AAkBH,GAlCD;;AAoCA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE5B,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,wCAAS;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,GAAG,EAAC,qBAAvB;AAA6C,QAAA,IAAI,EAAEJ,IAAI,CAACc,aAAL,CAAmBC,OAAtE;AAAA,kBAAgFf,IAAI,CAACO;AAArF;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,4BAAWP,IAAI,CAACS,KAAL,CAAWF,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,8BAAaP,IAAI,CAACU,OAAL,CAAaC,GAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACL,IAAzB,EAA+BuB,IAA/B,CAAoC,IAApC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,KAAU9B,IAAI,CAACiB,EAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAhDD;;KAAMnB,Y;AAkDN,eAAeA,YAAf","sourcesContent":["import React from 'react';\n\nconst SearchResult = ({match, song, songs, addSong, deleteSearchResults}) => {\n\n    const handleClick = () => {\n\n        debugger\n\n        \n\n        const configObj = {\n            song: {\n                title: song.name,\n                album_name: song.album.name,\n                artists: song.artists.map( a => a.name),\n                url: song.external_urls.spotify,\n                spotify_id: song.id\n            }\n        }\n\n        fetch(`http://localhost:3001${match.url}`, {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            credentials: 'include',\n            body: JSON.stringify(configObj)\n        })\n        .then(response => response.json())\n        .then( json => {\n            if (!json.errors) {\n                deleteSearchResults()\n                addSong(json)\n            } else {\n                alert(json.errors.join(\"\\n\"))\n            }\n\n        })\n        .catch(error => console.log('API errors:', error))\n\n    }\n\n    return (\n        <div key={song.id}>\n            <div>\n                <button onClick={handleClick}>Add</button>\n            </div>\n            <p>Song: <a target=\"_blank\" rel=\"noopener noreferrer\" href={song.external_urls.spotify}>{song.name}</a></p>\n            <p>Album: {song.album.name}</p>\n            <p>Artists: {song.artists.map( a => a.name).join(', ')}</p>\n        </div>\n    )\n}\n\nexport default SearchResult\n\n"]},"metadata":{},"sourceType":"module"}