{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PlaylistsContainer from '../containers/PlaylistsContainer';\nimport Home from '../components/registrations/Home';\nimport Login from '../components/registrations/Login';\nimport Signup from '../components/registrations/Signup';\nimport NoMatch from '../components/NoMatch';\nimport { fetchUser, loginUser, logoutUser } from '../actions/userActions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    const {\n      fetchUser,\n      user,\n      loginUser,\n      logoutUser\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(Home, { ...props,\n              fetchUser: fetchUser,\n              user: user,\n              loginUser: loginUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/users/:userId/playlists\",\n            render: props => /*#__PURE__*/_jsxDEV(PlaylistsContainer, { ...props,\n              fetchUser: fetchUser,\n              user: user,\n              loginUser: loginUser,\n              logoutUser: logoutUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            render: () => /*#__PURE__*/_jsxDEV(NoMatch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(({\n  user\n}) => ({\n  user\n}), {\n  fetchUser,\n  loginUser,\n  logoutUser\n})(App); // Alternative code:\n// const mapStateToProps = ({user}) => ({user})\n// const mapDispatchToProps = dispatch => ({\n//   loginUser: user => dispatch({ type: \"ADD_USER\", user }) // or, if importing actions -> loginUser: user => dispatch(loginUser(user))\n// })","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","connect","PlaylistsContainer","Home","Login","Signup","NoMatch","fetchUser","loginUser","logoutUser","App","render","user","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,wBAAjD;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAE1Be,EAAAA,MAAM,GAAG;AACP,UAAM;AAACJ,MAAAA,SAAD;AAAYK,MAAAA,IAAZ;AAAkBJ,MAAAA,SAAlB;AAA6BC,MAAAA;AAA7B,QAA2C,KAAKI,KAAtD;AAEA,wBACE;AAAA,6BACG,QAAC,MAAD;AAAA,+BACC,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,GADP;AAEE,YAAA,MAAM,EAAEA,KAAK,iBACb,QAAC,IAAD,OAAUA,KAAV;AAAiB,cAAA,SAAS,EAAEN,SAA5B;AAAuC,cAAA,IAAI,EAAEK,IAA7C;AAAmD,cAAA,SAAS,EAAEJ;AAA9D;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBADF,eAgBE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,0BADP;AAEE,YAAA,MAAM,EAAEK,KAAK,iBACb,QAAC,kBAAD,OAAwBA,KAAxB;AAA+B,cAAA,SAAS,EAAEN,SAA1C;AAAqD,cAAA,IAAI,EAAEK,IAA3D;AAAiE,cAAA,SAAS,EAAEJ,SAA5E;AAAuF,cAAA,UAAU,EAAEC;AAAnG;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAqBE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,MAAM,EAAE,mBAAM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAlCyB;;AAqC5B,eAAeR,OAAO,CAAE,CAAC;AAACW,EAAAA;AAAD,CAAD,MAAa;AAACA,EAAAA;AAAD,CAAb,CAAF,EAAwB;AAACL,EAAAA,SAAD;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAxB,CAAP,CAAoEC,GAApE,CAAf,C,CAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport PlaylistsContainer from '../containers/PlaylistsContainer'\nimport Home from '../components/registrations/Home'\nimport Login from '../components/registrations/Login'\nimport Signup from '../components/registrations/Signup'\nimport NoMatch from '../components/NoMatch'\nimport { fetchUser, loginUser, logoutUser } from '../actions/userActions'\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    const {fetchUser, user, loginUser, logoutUser} = this.props\n\n    return (\n      <div>\n         <Router>\n          <Switch>\n            <Route\n              path='/' \n              render={props => (\n              <Home {...props} fetchUser={fetchUser} user={user} loginUser={loginUser} /> )}\n            />\n            {/* <Route \n              exact path='/login'\n              render={props => (\n              <Login {...props} fetchUser={fetchUser} user={user} loginUser={loginUser} /> )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n              <Signup {...props} fetchUser={fetchUser} user={user} loginUser={loginUser} /> )}\n            /> */}\n            <Route\n              path='/users/:userId/playlists'\n              render={props => (\n              <PlaylistsContainer {...props} fetchUser={fetchUser} user={user} loginUser={loginUser} logoutUser={logoutUser} /> )}\n            />\n            <Route path='*' render={() => <NoMatch /> }/>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default connect( ({user}) => ({user}), {fetchUser, loginUser, logoutUser} )(App);\n\n// Alternative code:\n// const mapStateToProps = ({user}) => ({user})\n// const mapDispatchToProps = dispatch => ({\n//   loginUser: user => dispatch({ type: \"ADD_USER\", user }) // or, if importing actions -> loginUser: user => dispatch(loginUser(user))\n// })"]},"metadata":{},"sourceType":"module"}