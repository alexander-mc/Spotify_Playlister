{"ast":null,"code":"export const updateLoginInfo = loginInfo => {\n  return {\n    type: \"UPDATE_LOGIN_INFO\",\n    loginInfo\n  };\n};\nexport const fetchLoginInfo = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_LOGIN_INFO'\n    });\n    fetch('http://localhost:3001/logged_in', {\n      credentials: 'include'\n    }).then(response => response.json()).then(json => {\n      let loginInfo;\n      json.logged_in ? loginInfo = {\n        isLoggedIn: true,\n        user: json.user\n      } : loginInfo = {\n        isLoggedIn: false,\n        user: {}\n      };\n      dispatch(updateLoginInfo(loginInfo));\n    });\n  };\n}; // fetchLoginInfo = () => {\n//     return (\n//       fetch('http://localhost:3001/logged_in', {\n//         credentials: 'include' // could also use 'same-origin'\n//       })\n//       .then(response => response.json())\n//       .then(json => {\n//         json.logged_in ?\n//         this.props.updateLoginInfo({ isLoggedIn: true, user: json.user }) :\n//         this.props.updateLoginInfo({ isLoggedIn: false, user: {} })\n//       })\n//       .catch(error => console.log('API error:', error))\n//     )\n//   }","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/actions/loginActions.js"],"names":["updateLoginInfo","loginInfo","type","fetchLoginInfo","dispatch","fetch","credentials","then","response","json","logged_in","isLoggedIn","user"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAGC,SAAS,IAAI;AACxC,SAAO;AAAEC,IAAAA,IAAI,EAAE,mBAAR;AAA6BD,IAAAA;AAA7B,GAAP;AACH,CAFM;AAIP,OAAO,MAAME,cAAc,GAAG,MAAM;AAChC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAG,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAApC,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,UAAIR,SAAJ;AACAQ,MAAAA,IAAI,CAACC,SAAL,GACAT,SAAS,GAAI;AAAEU,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,IAAI,EAAEH,IAAI,CAACG;AAA/B,OADb,GAEAX,SAAS,GAAI;AAAEU,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,IAAI,EAAE;AAA3B,OAFb;AAGAR,MAAAA,QAAQ,CAACJ,eAAe,CAACC,SAAD,CAAhB,CAAR;AACH,KARD;AASH,GAXD;AAYH,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const updateLoginInfo = loginInfo => {\n    return { type: \"UPDATE_LOGIN_INFO\", loginInfo }\n}\n\nexport const fetchLoginInfo = () => {\n    return dispatch => {\n        dispatch({type: 'LOADING_LOGIN_INFO'});\n        fetch('http://localhost:3001/logged_in', { credentials: 'include' })\n        .then(response => response.json())\n        .then(json => {\n            let loginInfo;\n            json.logged_in ?\n            loginInfo = ({ isLoggedIn: true, user: json.user }) :\n            loginInfo = ({ isLoggedIn: false, user: {} })\n            dispatch(updateLoginInfo(loginInfo))\n        })\n    }\n}\n\n// fetchLoginInfo = () => {\n//     return (\n//       fetch('http://localhost:3001/logged_in', {\n//         credentials: 'include' // could also use 'same-origin'\n//       })\n//       .then(response => response.json())\n//       .then(json => {\n//         json.logged_in ?\n//         this.props.updateLoginInfo({ isLoggedIn: true, user: json.user }) :\n//         this.props.updateLoginInfo({ isLoggedIn: false, user: {} })\n//       })\n//       .catch(error => console.log('API error:', error))\n//     )\n//   }"]},"metadata":{},"sourceType":"module"}