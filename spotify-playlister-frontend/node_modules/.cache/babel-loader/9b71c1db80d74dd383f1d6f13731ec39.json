{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/search/SearchResult.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = ({\n  addSong,\n  song\n}) => {\n  const handleClick = () => {\n    const configObj = {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      credentials: 'include'\n    };\n    fetch(`http://localhost:3001/users/${playlist.userId}/playlists/${playlist.id}`, configObj).then(response => response.json()).then(json => !json.errors ? deletePlaylist(playlist.id) : alert(json.errors.join(\"\\n\"))).catch(error => console.log('API errors:', error));\n    addSong(song);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Song: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: song.external_urls.spotify,\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Album: \", song.album.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Artists: \", song.artists.map(a => a.name).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, song.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/search/SearchResult.js"],"names":["React","SearchResult","addSong","song","handleClick","configObj","method","headers","credentials","fetch","playlist","userId","id","then","response","json","errors","deletePlaylist","alert","join","catch","error","console","log","external_urls","spotify","name","album","artists","map","a"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAqB;AAEtC,QAAMC,WAAW,GAAG,MAAM;AACtB,UAAMC,SAAS,GAAG;AACdC,MAAAA,MAAM,EAAE,QADM;AAEdC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFK;AAGdC,MAAAA,WAAW,EAAE;AAHC,KAAlB;AAMAC,IAAAA,KAAK,CAAE,+BAA8BC,QAAQ,CAACC,MAAO,cAAaD,QAAQ,CAACE,EAAG,EAAzE,EAA4EP,SAA5E,CAAL,CACCQ,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,CAACA,IAAI,CAACC,MAAN,GAAeC,cAAc,CAACP,QAAQ,CAACE,EAAV,CAA7B,GAA6CM,KAAK,CAACH,IAAI,CAACC,MAAL,CAAYG,IAAZ,CAAiB,IAAjB,CAAD,CAFhE,EAGCC,KAHD,CAGOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B,CAHhB;AAMAnB,IAAAA,OAAO,CAACC,IAAD,CAAP;AACH,GAdD;;AAgBA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,wCAAS;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,GAAG,EAAC,qBAAvB;AAA6C,QAAA,IAAI,EAAED,IAAI,CAACqB,aAAL,CAAmBC,OAAtE;AAAA,kBAAgFtB,IAAI,CAACuB;AAArF;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,4BAAWvB,IAAI,CAACwB,KAAL,CAAWD,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,8BAAavB,IAAI,CAACyB,OAAL,CAAaC,GAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACJ,IAAzB,EAA+BP,IAA/B,CAAoC,IAApC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,KAAUhB,IAAI,CAACS,EAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA5BD;;KAAMX,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import React from 'react';\n\nconst SearchResult = ({addSong, song}) => {\n\n    const handleClick = () => {\n        const configObj = {\n            method: 'DELETE',\n            headers: {'Content-type': 'application/json; charset=UTF-8'},\n            credentials: 'include'\n        }\n\n        fetch(`http://localhost:3001/users/${playlist.userId}/playlists/${playlist.id}`, configObj)   \n        .then(response => response.json())\n        .then(json => !json.errors ? deletePlaylist(playlist.id) : alert(json.errors.join(\"\\n\")))\n        .catch(error => console.log('API errors:', error))\n\n\n        addSong(song)\n    }\n\n    return (\n        <div key={song.id}>\n            <div>\n                <button onClick={handleClick}>Add</button>\n            </div>\n            <p>Song: <a target=\"_blank\" rel=\"noopener noreferrer\" href={song.external_urls.spotify}>{song.name}</a></p>\n            <p>Album: {song.album.name}</p>\n            <p>Artists: {song.artists.map( a => a.name).join(', ')}</p>\n        </div>\n    )\n}\n\nexport default SearchResult\n\n"]},"metadata":{},"sourceType":"module"}