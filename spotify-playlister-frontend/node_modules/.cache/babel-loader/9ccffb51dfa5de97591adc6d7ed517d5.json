{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/SongsContainer.js\";\nimport React, { Component } from 'react';\nimport Holding from '../components/Holding';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SongsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      debugger;\n\n      if (this.props.user.loading) {\n        return this.tempPage();\n      } else {\n        return this.authUser();\n      }\n    };\n\n    this.authUser = () => {\n      const isValidUser = this.props.user.id === parseInt(this.props.match.params.userId, 10);\n      debugger;\n      return isValidUser ? this.loadPage() : this.redirect();\n    };\n\n    this.redirect = () => this.props.history.push('/');\n\n    this.tempPage = () => /*#__PURE__*/_jsxDEV(Holding, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this);\n\n    this.loadPage = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Playlist Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.handleLoading()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this);\n  }\n\n}\n\n;\nexport default connect(({\n  songs\n}) => ({\n  songs\n}), {})(SongsContainer);","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/SongsContainer.js"],"names":["React","Component","Holding","connect","SongsContainer","handleLoading","props","user","loading","tempPage","authUser","isValidUser","id","parseInt","match","params","userId","loadPage","redirect","history","push","componentDidMount","fetchUser","render","songs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAMnCI,aANmC,GAMnB,MAAM;AAClB;;AACA,UAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,OAApB,EAA6B;AACzB,eAAO,KAAKC,QAAL,EAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAKC,QAAL,EAAP;AACH;AACJ,KAbkC;;AAAA,SAenCA,QAfmC,GAexB,MAAM;AACb,YAAMC,WAAW,GAAG,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,EAAhB,KAAuBC,QAAQ,CAAC,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBC,MAAzB,EAAiC,EAAjC,CAAnD;AACA;AACA,aAAOL,WAAW,GAAG,KAAKM,QAAL,EAAH,GAAqB,KAAKC,QAAL,EAAvC;AACD,KAnBgC;;AAAA,SAoBnCA,QApBmC,GAoBxB,MAAM,KAAKZ,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CApBkB;;AAAA,SAqBnCX,QArBmC,GAqBxB,mBAAM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YArBkB;;AAAA,SAuBnCQ,QAvBmC,GAuBxB,MAAM;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAzBkC;AAAA;;AAEnCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,KAAL,CAAWgB,SAAX;AACH;;AAuBDC,EAAAA,MAAM,GAAI;AAAE,wBAAO;AAAA,gBAAM,KAAKlB,aAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AAA0C;;AA3BnB;;AA6BtC;AAED,eAAeF,OAAO,CAAE,CAAC;AAACqB,EAAAA;AAAD,CAAD,MAAc;AAACA,EAAAA;AAAD,CAAd,CAAF,EAA0B,EAA1B,CAAP,CAAwCpB,cAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Holding from '../components/Holding'\nimport { connect } from 'react-redux'\n\nclass SongsContainer extends Component {\n\n    componentDidMount() {\n        this.props.fetchUser()\n    }\n\n    handleLoading = () => {\n        debugger\n        if (this.props.user.loading) {\n            return this.tempPage()\n        } else {\n            return this.authUser()\n        }\n    }\n\n    authUser = () => {\n        const isValidUser = this.props.user.id === parseInt(this.props.match.params.userId, 10)\n        debugger\n        return isValidUser ? this.loadPage() : this.redirect()\n      }\n    redirect = () => this.props.history.push('/')\n    tempPage = () => <Holding />\n\n    loadPage = () => {\n        return <div>Playlist Songs</div>\n    } \n    \n    render () { return <div>{this.handleLoading()}</div> }\n\n};\n\nexport default connect( ({songs}) => ({songs}), {  } )(SongsContainer)"]},"metadata":{},"sourceType":"module"}