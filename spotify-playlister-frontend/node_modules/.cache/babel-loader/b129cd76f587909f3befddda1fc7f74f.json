{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Search.js\";\nimport React, { Component } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport SearchResults from './SearchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      searchResults: [],\n      errors: \"\"\n    };\n\n    this.handleChange = e => this.setState({\n      query: e.target.value\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        errors: ''\n      });\n      this.fetchSongs(this.state.query);\n      this.setState({\n        query: ''\n      });\n    };\n\n    this.resetSearch = () => this.setState({\n      query: \"\",\n      searchResults: [],\n      errors: \"\"\n    });\n  }\n\n  render() {\n    const {\n      query,\n      searchResults,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.handleChange,\n          value: query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.resetSearch,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n        songs: searchResults,\n        errors: errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSearch.CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nSearch.CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\nexport default Search;","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Search.js"],"names":["React","Component","SpotifyWebApi","SearchResults","Search","state","query","searchResults","errors","handleChange","e","setState","target","value","handleSubmit","preventDefault","fetchSongs","resetSearch","render","CLIENT_ID","process","env","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAK7BI,KAL6B,GAKrB;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,aAAa,EAAE,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KALqB;;AAAA,SAO7BC,YAP6B,GAObC,CAAD,IAAO,KAAKC,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAlB,KAAd,CAPO;;AAAA,SAQ7BC,YAR6B,GAQbJ,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACK,cAAF;AACA,WAAKJ,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAE;AAAV,OAAd;AACA,WAAKQ,UAAL,CAAgB,KAAKX,KAAL,CAAWC,KAA3B;AACA,WAAKK,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAb4B;;AAAA,SAe7BW,WAf6B,GAef,MAAM,KAAKN,QAAL,CAAe;AAAEL,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,aAAa,EAAE,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KAAf,CAfS;AAAA;;AAiB7BU,EAAAA,MAAM,GAAG;AACP,UAAM;AAACZ,MAAAA,KAAD;AAAQC,MAAAA,aAAR;AAAuBC,MAAAA;AAAvB,QAAiC,KAAKH,KAA5C;AACA,wBACE;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAG,KAAKS,YAAtB;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAG,KAAKL,YAAnC;AAAkD,UAAA,KAAK,EAAEH;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAE,KAAKW,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEV,aAAtB;AAAqC,QAAA,MAAM,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA7B4B;;AAAzBJ,M,CAEGe,S,GAAYC,OAAO,CAACC,GAAR,CAAYC,mB;AAF3BlB,M,CAGGmB,a,GAAgBH,OAAO,CAACC,GAAR,CAAYG,uB;AA6BrC,eAAepB,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport SearchResults from './SearchResults'\n\nclass Search extends Component {\n\n  static CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  static CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n\n  state = { query: \"\", searchResults: [], errors: \"\" }\n  \n  handleChange = (e) => this.setState({ query: e.target.value })\n  handleSubmit = (e) => {\n    e.preventDefault();        \n    this.setState({ errors: '' })\n    this.fetchSongs(this.state.query)\n    this.setState({ query: '' })\n  }    \n\n  resetSearch = () => this.setState( { query: \"\", searchResults: [], errors: \"\" } )\n\n  render() {\n    const {query, searchResults, errors} = this.state\n    return (\n      <div>\n        <form onSubmit={ this.handleSubmit }>\n          <input type=\"text\" onChange={ this.handleChange } value={query} />\n          <input type=\"submit\" />\n          <button onClick={this.resetSearch}>Clear</button>\n        </form>\n        <SearchResults songs={searchResults} errors={errors} />\n      </div>\n    )\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}