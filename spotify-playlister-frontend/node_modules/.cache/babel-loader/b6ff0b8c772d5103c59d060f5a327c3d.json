{"ast":null,"code":"export const addUser = user => {\n  debugger;\n  return {\n    type: \"ADD_USER\",\n    user\n  };\n};\nexport const deleteUser = () => {\n  return {\n    type: \"DELETE_USER\"\n  };\n};\nexport const fetchUser = () => {\n  debugger;\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_USER'\n    });\n    fetch('http://localhost:3001/logged_in', {\n      credentials: 'include'\n    }).then(response => response.json()).then(json => {\n      let user;\n      debugger;\n      json.isloggedIn ? user = json : user = {\n        isLoggedIn: false\n      };\n      dispatch(addUser(user));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/actions/userActions.js"],"names":["addUser","user","type","deleteUser","fetchUser","dispatch","fetch","credentials","then","response","json","isloggedIn","isLoggedIn"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAGC,IAAI,IAAI;AAC3B;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBD,IAAAA;AAApB,GAAP;AACH,CAHM;AAKP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAO;AAAED,IAAAA,IAAI,EAAE;AAAR,GAAP;AACH,CAFM;AAIP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC3B;AACA,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAI,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAApC,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,UAAIT,IAAJ;AACA;AACAS,MAAAA,IAAI,CAACC,UAAL,GACIV,IAAI,GAAGS,IADX,GAEIT,IAAI,GAAG;AAAEW,QAAAA,UAAU,EAAE;AAAd,OAFX;AAGAP,MAAAA,QAAQ,CAACL,OAAO,CAACC,IAAD,CAAR,CAAR;AACH,KATD;AAUH,GAZD;AAaH,CAfM","sourcesContent":["export const addUser = user => {\n    debugger\n    return { type: \"ADD_USER\", user }\n}\n\nexport const deleteUser = () => {\n    return { type: \"DELETE_USER\" }\n}\n\nexport const fetchUser = () => {\n    debugger\n    return dispatch => {\n        dispatch({type: 'LOADING_USER'});\n        fetch('http://localhost:3001/logged_in', { credentials: 'include' })\n        .then(response => response.json())\n        .then(json => {\n            let user;\n            debugger\n            json.isloggedIn ?\n                user = json :\n                user = { isLoggedIn: false }\n            dispatch(addUser(user))\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}