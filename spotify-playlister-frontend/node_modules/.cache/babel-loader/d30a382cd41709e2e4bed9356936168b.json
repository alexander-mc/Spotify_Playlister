{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Search.js\";\nimport React, { Component } from 'react';\nimport SearchResults from './SearchResults';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      results: []\n    };\n\n    this.handleChange = e => this.setState({\n      query: e.target.value\n    });\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        query: ''\n      });\n      console.log('User clicked submit');\n\n      const request = require('request'); // \"Request\" library\n\n\n      const client_id = '1ffa3ac0ae7b4bd6b6058b10e66c9475'; // Your client id\n\n      const client_secret = '49276a663c6c44d2b7635e0d5677f40f'; // Your secret\n      // your application requests authorization\n\n      const authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        headers: {\n          'Authorization': 'Basic ' + new Buffer(client_id + ':' + client_secret).toString('base64')\n        },\n        form: {\n          grant_type: 'client_credentials'\n        },\n        json: true\n      };\n      request.post(authOptions, function (error, response, body) {\n        if (!error && response.statusCode === 200) {\n          // use the access token to access the Spotify Web API\n          const token = body.access_token;\n          const spotify = new SpotifyWebApi();\n          spotify.setAccessToken(token);\n          spotify.searchTracks('sesss:Love').then(function (data) {\n            console.log('Search by \"Love\"', data);\n          }, function (err) {\n            console.error(err);\n          });\n          const options = {\n            url: 'https://api.spotify.com/v1/users/jmperezperez',\n            headers: {\n              'Authorization': 'Bearer ' + token\n            },\n            json: true\n          };\n          request.get(options, function (error, response, body) {\n            console.log(body);\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.handleChange,\n          value: this.state.query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\n;\nexport default Search;","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Search.js"],"names":["React","Component","SearchResults","SpotifyWebApi","Search","state","query","results","handleChange","e","setState","target","value","handleSubmit","preventDefault","console","log","request","require","client_id","client_secret","authOptions","url","headers","Buffer","toString","form","grant_type","json","post","error","response","body","statusCode","token","access_token","spotify","setAccessToken","searchTracks","then","data","err","options","get","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport SearchResults from './SearchResults'\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nclass Search extends Component {\n\n    state = { query: \"\", results: [] }\n    \n    handleChange = (e) => this.setState({ query: e.target.value })\n    handleSubmit = (e) => {\n      e.preventDefault();        \n      this.setState({ query: '' })\n\n      console.log('User clicked submit')\n      \n      const request = require('request'); // \"Request\" library\n      const client_id = '1ffa3ac0ae7b4bd6b6058b10e66c9475'; // Your client id\n      const client_secret = '49276a663c6c44d2b7635e0d5677f40f'; // Your secret\n      \n      // your application requests authorization\n      const authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        headers: {\n          'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n        },\n        form: {\n          grant_type: 'client_credentials'\n        },\n        json: true\n      };\n\n      request.post(authOptions, function(error, response, body) {\n        if (!error && response.statusCode === 200) {\n          \n          // use the access token to access the Spotify Web API\n          const token = body.access_token;\n          \n          const spotify = new SpotifyWebApi();\n          spotify.setAccessToken(token)\n          spotify.searchTracks('sesss:Love').then(\n            function (data) {\n              console.log('Search by \"Love\"', data);\n            },\n            function (err) {\n              console.error(err);\n            }\n          );\n\n\n          const options = {\n            url: 'https://api.spotify.com/v1/users/jmperezperez',\n            headers: {\n              'Authorization': 'Bearer ' + token\n            },\n            json: true\n          };\n          request.get(options, function(error, response, body) {\n            console.log(body);\n          });\n        }\n      });\n\n    }    \n\n    render() {\n        return (\n          <div>\n            <form onSubmit={ this.handleSubmit }>\n              <input type=\"text\" onChange={ this.handleChange } value={this.state.query} />\n              <input type=\"submit\" />\n            </form>\n            {/* <SearchResults /> */}\n          </div>\n        );\n    }\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}