{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Song.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Song = ({\n  song,\n  deleteSong\n}) => {\n  const handleClick = () => {// deleteSong(song.id);\n    // const configObj = {\n    //     method: 'DELETE',\n    //     headers: {'Content-type': 'application/json; charset=UTF-8'},\n    //     credentials: 'include'\n    // }\n    // fetch(`http://localhost:3001/users/${playlist.userId}/playlists/${playlist.id}`, configObj)   \n    // .then(response => response.json())\n    // .then(json => !json.errors ? deletePlaylist(playlist.id) : alert(json.errors.join(\"\\n\")))\n    // .catch(error => console.log('API errors:', error))\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Song: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: song.url,\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Album: \", song.album_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Artists: \", JSON.parse(song.artists).map(a => a.name).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \" X \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, song.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Song;\nexport default Song;\n\nvar _c;\n\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Song.js"],"names":["React","Song","song","deleteSong","handleClick","url","title","album_name","JSON","parse","artists","map","a","name","join","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAwB;AAEjC,QAAMC,WAAW,GAAG,MAAM,CACtB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACH,GAZD;;AAcA,sBACI;AAAA,4BACI;AAAA,wCAAS;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,GAAG,EAAC,qBAAvB;AAA6C,QAAA,IAAI,EAAEF,IAAI,CAACG,GAAxD;AAAA,kBAA8DH,IAAI,CAACI;AAAnE;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,4BAAWJ,IAAI,CAACK,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BAAaC,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACQ,OAAhB,EAAyBC,GAAzB,CAA8BC,CAAC,IAAIA,CAAC,CAACC,IAArC,EAA2CC,IAA3C,CAAgD,IAAhD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAEV,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,KAASF,IAAI,CAACa,EAAd;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CAxBH;;KAAMd,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\n\nconst Song = ({song, deleteSong}) => {\n    \n    const handleClick = () => {\n        // deleteSong(song.id);\n        // const configObj = {\n        //     method: 'DELETE',\n        //     headers: {'Content-type': 'application/json; charset=UTF-8'},\n        //     credentials: 'include'\n        // }\n\n        // fetch(`http://localhost:3001/users/${playlist.userId}/playlists/${playlist.id}`, configObj)   \n        // .then(response => response.json())\n        // .then(json => !json.errors ? deletePlaylist(playlist.id) : alert(json.errors.join(\"\\n\")))\n        // .catch(error => console.log('API errors:', error))\n    }\n\n    return (\n        <li key={song.id}>\n            <p>Song: <a target=\"_blank\" rel=\"noopener noreferrer\" href={song.url}>{song.title}</a></p>\n            <p>Album: {song.album_name}</p>\n            <p>Artists: {JSON.parse(song.artists).map( a => a.name).join(', ')}</p>\n            <button onClick={handleClick} > X </button>\n        </li>\n    );\n  }\n \nexport default Song;"]},"metadata":{},"sourceType":"module"}