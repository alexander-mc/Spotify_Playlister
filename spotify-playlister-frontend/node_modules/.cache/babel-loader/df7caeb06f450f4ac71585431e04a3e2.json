{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/search/SearchResult.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = ({\n  match,\n  song,\n  addSong\n}) => {\n  const handleClick = () => {\n    const configObj = {\n      song: {\n        title: song.name\n      }\n    };\n    fetch(`http://localhost:3001${match.url}`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      credentials: 'include',\n      body: JSON.stringify(configObj)\n    }).then(response => response.json()).then(json => {\n      debugger; //     if (!json.errors) {\n      //         addPlaylist(json)\n      //         history.push(`${match.url}/${json.id}/songs`)\n      //     } else {\n      //         this.setState({ errors: json.errors })\n      //     }\n    }).catch(error => console.log('API errors:', error)); // addSong(song)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Song: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: song.external_urls.spotify,\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Album: \", song.album.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Artists: \", song.artists.map(a => a.name).join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, song.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/search/SearchResult.js"],"names":["React","SearchResult","match","song","addSong","handleClick","configObj","title","name","fetch","url","method","headers","credentials","body","JSON","stringify","then","response","json","catch","error","console","log","external_urls","spotify","album","artists","map","a","join","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA4B;AAE7C,QAAMC,WAAW,GAAG,MAAM;AAEtB,UAAMC,SAAS,GAAG;AACdH,MAAAA,IAAI,EAAE;AAAEI,QAAAA,KAAK,EAAEJ,IAAI,CAACK;AAAd;AADQ,KAAlB;AAIAC,IAAAA,KAAK,CAAE,wBAAuBP,KAAK,CAACQ,GAAI,EAAnC,EAAsC;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF8B;AAGvCC,MAAAA,WAAW,EAAE,SAH0B;AAIvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,SAAf;AAJiC,KAAtC,CAAL,CAMCW,IAND,CAMMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANlB,EAOCF,IAPD,CAOOE,IAAI,IAAI;AACP,eADO,CAEf;AACA;AACA;AACA;AACA;AACA;AAEC,KAhBD,EAiBCC,KAjBD,CAiBOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B,CAjBhB,EANsB,CA0BtB;AACH,GA3BD;;AA6BA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEhB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,wCAAS;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,GAAG,EAAC,qBAAvB;AAA6C,QAAA,IAAI,EAAEF,IAAI,CAACqB,aAAL,CAAmBC,OAAtE;AAAA,kBAAgFtB,IAAI,CAACK;AAArF;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,4BAAWL,IAAI,CAACuB,KAAL,CAAWlB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,8BAAaL,IAAI,CAACwB,OAAL,CAAaC,GAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACrB,IAAzB,EAA+BsB,IAA/B,CAAoC,IAApC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,KAAU3B,IAAI,CAAC4B,EAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAzCD;;KAAM9B,Y;AA2CN,eAAeA,YAAf","sourcesContent":["import React from 'react';\n\nconst SearchResult = ({match, song, addSong}) => {\n\n    const handleClick = () => {\n\n        const configObj = {\n            song: { title: song.name }\n        }\n        \n        fetch(`http://localhost:3001${match.url}`, {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            credentials: 'include',\n            body: JSON.stringify(configObj)\n        })\n        .then(response => response.json())\n        .then( json => {\n                debugger            \n        //     if (!json.errors) {\n        //         addPlaylist(json)\n        //         history.push(`${match.url}/${json.id}/songs`)\n        //     } else {\n        //         this.setState({ errors: json.errors })\n        //     }\n\n        })\n        .catch(error => console.log('API errors:', error))\n\n\n        // addSong(song)\n    }\n\n    return (\n        <div key={song.id}>\n            <div>\n                <button onClick={handleClick}>Add</button>\n            </div>\n            <p>Song: <a target=\"_blank\" rel=\"noopener noreferrer\" href={song.external_urls.spotify}>{song.name}</a></p>\n            <p>Album: {song.album.name}</p>\n            <p>Artists: {song.artists.map( a => a.name).join(', ')}</p>\n        </div>\n    )\n}\n\nexport default SearchResult\n\n"]},"metadata":{},"sourceType":"module"}