{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/registrations/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      errors: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const confObj = {\n        user: {\n          username: this.state.username,\n          password: this.state.password\n        }\n      };\n      fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        },\n        credentials: 'include',\n        body: JSON.stringify(confObj)\n      }).then(response => response.json()).then(json => {\n        if (json.logged_in) {\n          this.props.updateLoginInfo({\n            isLoggedIn: true,\n            user: json.user\n          });\n          this.redirect();\n        } else {\n          this.setState({\n            errors: json.errors\n          });\n        }\n      }).catch(error => console.log('API errors:', error));\n    };\n\n    this.handleLoading = () => this.props.loginInfo.loading ? this.tempPage() : this.authUser();\n\n    this.authUser = () => this.props.loginInfo.isLoggedIn ? this.redirect() : this.loadPage();\n\n    this.redirect = () => this.props.history.push(`/users/${this.props.loginInfo.user.id}/playlists`);\n\n    this.tempPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"login page temp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this);\n\n    this.loadPage = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"username\",\n            type: \"text\",\n            name: \"username\",\n            value: this.state.username,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"password\",\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            placeholder: \"submit\",\n            type: \"submit\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"or \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.errors ? this.handleErrors() : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.handleErrors = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.errors.map(error => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, error, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchLoginInfo();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.handleLoading()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/registrations/Login.js"],"names":["React","Component","Link","Login","state","username","password","errors","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","confObj","user","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","logged_in","props","updateLoginInfo","isLoggedIn","redirect","catch","error","console","log","handleLoading","loginInfo","loading","tempPage","authUser","loadPage","history","push","id","handleErrors","map","componentDidMount","fetchLoginInfo","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass Login extends Component {\n\n    state = { \n        username: '',\n        password: '',\n        errors: ''\n    };\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({ [name]: value })\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n        const confObj = {\n            user: { username: this.state.username, password: this.state.password }\n        }\n\n        fetch('http://localhost:3001/login', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n            credentials: 'include',\n            body: JSON.stringify(confObj)\n        })\n        .then(response => response.json())\n        .then( json => {\n            if (json.logged_in) {\n              this.props.updateLoginInfo({ isLoggedIn: true, user: json.user })\n              this.redirect()\n            } else {\n              this.setState({ errors: json.errors })\n            }\n        })\n        .catch(error => console.log('API errors:', error))\n    }\n    \n    componentDidMount() {\n        this.props.fetchLoginInfo()\n    }\n\n    handleLoading = () => this.props.loginInfo.loading ? this.tempPage() : this.authUser();\n    authUser = () => this.props.loginInfo.isLoggedIn ? this.redirect() : this.loadPage();\n    redirect = () => this.props.history.push(`/users/${this.props.loginInfo.user.id}/playlists`);\n    \n    tempPage = () => <div>login page temp</div>\n    loadPage = () => {\n        return (\n            <div>\n                <h1>Log In</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        placeholder=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        value={this.state.username}\n                        onChange={this.handleChange}\n                    />\n                    <input\n                        placeholder=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                    <button placeholder=\"submit\" type=\"submit\">\n                        Log In\n                    </button>\n                    <div>\n                        or <Link to='/signup'>Sign Up</Link>\n                    </div>\n                </form>\n                <div>\n                    { this.state.errors ? this.handleErrors() : null }\n                </div>\n            </div>\n        );\n    }\n\n    handleErrors = () => {\n        return (\n            <div>\n                <ul>\n                    {this.state.errors.map(error => {\n                        return <li key={error}>{error}</li>\n                    })}\n                </ul>\n            </div>\n        )\n    }\n\n    render () { return <div>{ this.handleLoading() }</div> }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}