{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/SongsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SongInput from '../components/songs/SongInput';\nimport Songs from '../components/songs/Songs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SongsContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {};\n\n    this.findPlaylist = () => this.props.playlists.find(e => e.id === parseInt(this.props.match.params.playlistId, 10));\n\n    this.authPlaylist = () => !!this.findPlaylist() ? this.loadPage() : this.redirect();\n\n    this.redirect = () => this.props.history.push(`/users/${this.props.user.id}/playlists`);\n\n    this.songList = () => {\n      const playlistSongs = this.props.songs.filter(song => {\n        return song.playlistIds.find(id => id === parseInt(this.props.match.params.playlistId, 10));\n      });\n      return playlistSongs.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: s.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 40\n      }, this));\n    };\n\n    this.loadPage = () => {\n      const {\n        match\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.findPlaylist().name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Songs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClick,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.authPlaylist()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this);\n  }\n\n}\n\n;\nexport default connect(({\n  songs\n}) => ({\n  songs\n}), {})(SongsContainer);","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/containers/SongsContainer.js"],"names":["React","Component","connect","SongInput","Songs","SongsContainer","handleClick","findPlaylist","props","playlists","find","e","id","parseInt","match","params","playlistId","authPlaylist","loadPage","redirect","history","push","user","songList","playlistSongs","songs","filter","song","playlistIds","map","s","title","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAenCK,WAfmC,GAerB,MAAM,CAEnB,CAjBkC;;AAAA,SAmBnCC,YAnBmC,GAmBpB,MAAM,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,IAArB,CAA2BC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASC,QAAQ,CAAC,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,UAAzB,EAAqC,EAArC,CAAjD,CAnBc;;AAAA,SAoBnCC,YApBmC,GAoBpB,MAAM,CAAC,CAAC,KAAKV,YAAL,EAAF,GAAwB,KAAKW,QAAL,EAAxB,GAA0C,KAAKC,QAAL,EApB5B;;AAAA,SAqBnCA,QArBmC,GAqBxB,MAAM,KAAKX,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAyB,UAAS,KAAKb,KAAL,CAAWc,IAAX,CAAgBV,EAAG,YAArD,CArBkB;;AAAA,SAuBnCW,QAvBmC,GAuBxB,MAAM;AACb,YAAMC,aAAa,GAAG,KAAKhB,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAyBC,IAAI,IAAI;AACnD,eAAOA,IAAI,CAACC,WAAL,CAAiBlB,IAAjB,CAAuBE,EAAE,IAAIA,EAAE,KAAKC,QAAQ,CAAC,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,UAAzB,EAAqC,EAArC,CAA5C,CAAP;AACH,OAFqB,CAAtB;AAGA,aAAOQ,aAAa,CAACK,GAAd,CAAmBC,CAAC,iBAAI;AAAA,kBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,cAAxB,CAAP;AACH,KA5BkC;;AAAA,SA8BnCb,QA9BmC,GA8BxB,MAAM;AACb,YAAM;AAAEJ,QAAAA;AAAF,UAAY,KAAKN,KAAvB;AAEA,0BACI;AAAA,gCACI;AAAA,oBAAK,KAAKD,YAAL,GAAoByB;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,OAAO,EAAE,KAAK1B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAzCkC;AAAA;;AA2CnC2B,EAAAA,MAAM,GAAI;AAAE,wBAAO;AAAA,gBAAM,KAAKhB,YAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AAAyC;;AA3ClB;;AA6CtC;AAED,eAAef,OAAO,CAAE,CAAC;AAACuB,EAAAA;AAAD,CAAD,MAAc;AAACA,EAAAA;AAAD,CAAd,CAAF,EAA0B,EAA1B,CAAP,CAAwCpB,cAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SongInput from '../components/songs/SongInput'\nimport Songs from '../components/songs/Songs'\n\nclass SongsContainer extends Component {\n\n    // componentDidMount() {\n    //     debugger\n    //     // this.props.fetchUser()\n    // }\n\n    // handleLoading = () => {\n    //     // if (this.props.user.loading) {\n    //     //     return this.tempPage()\n    //     // } else {\n    //         return this.authPlaylist()\n    //     // }\n    // }\n\n    handleClick = () => {\n\n    }\n\n    findPlaylist = () => this.props.playlists.find( e => e.id === parseInt(this.props.match.params.playlistId, 10) )\n    authPlaylist = () => !!this.findPlaylist() ? this.loadPage() : this.redirect()\n    redirect = () => this.props.history.push(`/users/${this.props.user.id}/playlists`)\n\n    songList = () => {\n        const playlistSongs = this.props.songs.filter( song => {\n            return song.playlistIds.find( id => id === parseInt(this.props.match.params.playlistId, 10))\n        })\n        return playlistSongs.map( s => <li>{s.title}</li>)\n    }\n        \n    loadPage = () => {\n        const { match } = this.props\n\n        return (\n            <div>\n                <h3>{this.findPlaylist().name}</h3>\n                {/* <SongInput /> */}\n                <Songs />\n                <button onClick={this.handleClick}>Save</button>\n            </div>\n        )\n    }\n    \n    render () { return <div>{this.authPlaylist()}</div> }\n\n};\n\nexport default connect( ({songs}) => ({songs}), {  } )(SongsContainer)"]},"metadata":{},"sourceType":"module"}