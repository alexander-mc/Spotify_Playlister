{"ast":null,"code":"var _jsxFileName = \"/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Songs.js\";\nimport React from 'react';\nimport Song from './Song';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songs = ({\n  songs,\n  match,\n  deleteSong\n}) => {\n  const playlistSongs = songs.filter(song => song.playlistIds.includes(parseInt(match.params.playlistId, 10)));\n\n  const renderList = () => playlistSongs.map(song => /*#__PURE__*/_jsxDEV(Song, {\n    song: song,\n    deleteSong: deleteSong\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 57\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: songs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add a song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 56\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Songs;\nexport default Songs; // songList = () => {\n//     const playlistSongs = this.props.songs.filter( song => {\n//         return song.playlistIds.find( id => id === parseInt(this.props.match.params.playlistId, 10))\n//     })\n//     return playlistSongs.map( s => <li>{s.title}</li>)\n// }\n// <ul>\n//     {this.songList()}\n// </ul>\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/Alexander/Documents/Coding/Flatiron School/3_Projects/spotify_playlister/spotify-playlister-frontend/src/components/songs/Songs.js"],"names":["React","Song","Songs","songs","match","deleteSong","playlistSongs","filter","song","playlistIds","includes","parseInt","params","playlistId","renderList","map","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAAkC;AAE5C,QAAMC,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAcC,IAAI,IAAIA,IAAI,CAACC,WAAL,CAAiBC,QAAjB,CAA0BC,QAAQ,CAACP,KAAK,CAACQ,MAAN,CAAaC,UAAd,EAA0B,EAA1B,CAAlC,CAAtB,CAAtB;;AACA,QAAMC,UAAU,GAAG,MAAMR,aAAa,CAACS,GAAd,CAAmBP,IAAI,iBAAI,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,UAAU,EAAEH;AAA9B;AAAA;AAAA;AAAA;AAAA,UAA3B,CAAzB;;AAEA,sBACE;AAAA,cACIF,KAAK,CAACa,MAAN,GAAe,CAAf,gBAAmB;AAAA,gBAAKF,UAAU;AAAf;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADjD;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAXH;;KAAMZ,K;AAaJ,eAAeA,KAAf,C,CAGE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Song from './Song'\n\nconst Songs = ({ songs, match, deleteSong }) => {\n        \n    const playlistSongs = songs.filter( song => song.playlistIds.includes(parseInt(match.params.playlistId, 10)))\n    const renderList = () => playlistSongs.map( song => <Song song={song} deleteSong={deleteSong} /> )\n\n    return (\n      <div>\n        { songs.length > 0 ? <ul>{renderList()}</ul> : <div>Add a song</div> }\n      </div>\n    )\n  \n  }\n    \n  export default Songs;\n\n\n    // songList = () => {\n    //     const playlistSongs = this.props.songs.filter( song => {\n    //         return song.playlistIds.find( id => id === parseInt(this.props.match.params.playlistId, 10))\n    //     })\n    //     return playlistSongs.map( s => <li>{s.title}</li>)\n    // }\n\n    // <ul>\n    //     {this.songList()}\n    // </ul>\n\n"]},"metadata":{},"sourceType":"module"}